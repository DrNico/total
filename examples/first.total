(* ToTal example file (* with nested comments! *) *)

(* Inductive comments *)

Inductive Nat : Type 0 := | Z : Nat | S : Nat -> Nat.

Inductive Fin : Nat -> Type 0 := 
| F_z : forall n : Nat , Fin (S n)
| F_n : forall n : Nat, Fin n -> Fin (S n).

(* Some definitions using 
   the inductive types *)

Definition zero := Z.

Definition id := fun (A : Type 0) (x : A) => x.

Definition zero' := id Nat Z.

Definition one := S Z.

Definition one' := S zero.

Definition one'' := id Nat one'.

Definition fo := F_z (S Z).

Definition idt := forall A : Type 0, A -> A.

Definition id' := (fun (A : Type 0) (x : A) => x) : idt.

Definition id'' : idt := (fun (A : Type 0) (x : A) => x).

Axiom axiomatic-id : idt.

Definition fakeZero := axiomatic-id Nat Z.
